<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.example.spring_boot_mode.dao.mode.UrlTypeCollectionDao">
    <resultMap id="UrlTypeCollectionMap" type="com.example.spring_boot_mode.entity.mode.UrlTypeCollection">
        <!--    property:实体类中       column:数据库中字段          -->
        <result property="id" column="id"/>
        <result property="typename" column="typename"/>
        <result property="sscollector" column="sscollector"/>
        <result property="createTime" column="createTime"/>
        <result property="sort" column="sort"/>
    </resultMap>

    <sql id="selectUrlTypeCollection">
        select id,
               typename,
               sscollector,
               createTime,
               sort
        from  url_type_collection
    </sql>
    <select id="selectbyuserId" resultMap="UrlTypeCollectionMap">
        <include refid="selectUrlTypeCollection"/>
        where
        sscollector = #{id}
        order by sort asc
    </select>
    <insert id="toadd" >
        insert into url_type_collection
        (
        id,
        typename,
        sscollector,
        createTime,
        sort
        )
        values (
        #{id},
        #{typename},
        #{sscollector},
        #{createTime},
        #{sort}
        )
    </insert>
    <update id="toedit" >
        update url_type_collection
        <set>
            <if test="typename != null and typename != ''">typename =#{typename},</if>
            <if test="sscollector != null and sscollector != ''">sscollector =#{sscollector},</if>
            <if test="createTime != null and createTime != ''">createTime =#{createTime},</if>
            <if test="sort != null and sort != ''">sort =#{sort},</if>
        </set>
        where  id = #{id}
    </update>
    <delete id="todelete" >
        delete from url_type_collection
        where id in
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>
    <select id="selectcountbyuserId" resultType="int">
        select count(id) from url_type_collection
        where sscollector = #{userid}
    </select>
    <select id="selectallbytwoid" resultMap="UrlTypeCollectionMap">
        <include refid="selectUrlTypeCollection"/>
        where id = #{dragid}
        or sscollector  =
        (select sscollector from url_type_collection where id =#{dropid})

    </select>
    <delete id="deletebytwoid" >
         delete from url_type_collection
         where  id = #{dragid}
         or sscollector =
         (select sscollector from
         (select sscollector from url_type_collection where id =#{dropid}) as temp)
    </delete>
    <insert id="insertList">
        insert into url_type_collection
        (
        id,
        typename,
        sscollector,
        createTime,
        sort
        )
        values
        <foreach collection="urlTypeCollections" separator="," item="item">
        (
        #{item.id},
        #{item.typename},
        #{item.sscollector},
        #{item.createTime},
        #{item.sort}
        )
        </foreach>
    </insert>
    <select id="selectbyid"  resultMap="UrlTypeCollectionMap">
        <include refid="selectUrlTypeCollection"/>
        where id = #{id}
    </select>
</mapper>